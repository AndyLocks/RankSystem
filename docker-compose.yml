version: '3.9'

services:
  points:
    container_name: points-service
    restart: always
    build:
      context: ./points_service/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=aboba
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - db
      - kafka
      - nginx

  rewards:
    container_name: rewards-service
    restart: always
    build:
      context: ./rewards_service/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=aboba
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - points

  manager:
    container_name: manager-service
    restart: always
    build:
      context: ./manager/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=aboba
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - rewards

  bot:
    container_name: bot-container
    restart: always
    build:
      context: ./bot/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=aboba
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - manager

  kafka:
    image: apache/kafka
    restart: always
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3


  nginx:
    image: nginx
    restart: always
    container_name: nginx-container
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80

  db:
    image: postgres
    container_name: postgres-container
    restart: always
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: aboba
      POSTGRES_USER: postgres
      POSTGRES_DB: test
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    container_name: redis-container
    command: redis-server
    volumes:
      - redis:/data

volumes:
  db:
    driver: local
  redis:
    driver: local
  kafka:
    driver: local
  nginx:
    driver: local
